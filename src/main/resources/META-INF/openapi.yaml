openapi: 3.0.3

info:
  title: IDPay Microservice
  version: 3.0.0-RC
  description: IDPay Microservice for Multi-channel Integration Layer of SW Client Project
  contact:
    name: Antonio Tarricone
    email: antonio.tarricone@pagopa.it

servers:
  - description: DEV
    url: https://mil-d-apim.azure-api.net/mil-idpay
  - description: UAT
    url: https://mil-u-apim.azure-api.net/mil-idpay

security:
  - bearerAuth: []

paths:
  # ================================================================================================
  #
  # /initiatives
  #
  # ================================================================================================
  /initiatives:
    get:
      operationId: getInitiatives
      summary: Returns the list of initiatives that can be used with the Merchant
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/AcquirerId'
        - $ref: '#/components/parameters/Channel'
        - $ref: '#/components/parameters/MerchantId'
        - $ref: '#/components/parameters/TerminalId'
      responses:
        "200":
          $ref: '#/components/responses/Initiatives'
        "400":
          $ref: '#/components/responses/Error'
        "401":
          description: Wrong credentials
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          $ref: '#/components/responses/Error'
        default:
          description: Unexpected error

  # ================================================================================================
  #
  # /transactions
  #
  # ================================================================================================
  /transactions:
    parameters:
      - $ref: '#/components/parameters/RequestId'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/AcquirerId'
      - $ref: '#/components/parameters/Channel'
      - $ref: '#/components/parameters/MerchantId'
      - $ref: '#/components/parameters/TerminalId'
    
    post:
      operationId: createTransaction
      summary: Creates an IDPay transaction
      requestBody:
        $ref: '#/components/requestBodies/CreateTransaction'
      responses:
        "201":
          $ref: '#/components/responses/CreateTransaction'
        "400":
          $ref: '#/components/responses/Error'
        "401":
          description: Wrong credentials
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          $ref: '#/components/responses/Error'
        default:
          description: Unexpected error

    # ------------------------------------------------------
    # Gets last 30 transactions executed by the client in
    # the last 30 days
    # ------------------------------------------------------
    get:
      operationId: getLastTransactions
      summary: Gets last 30 transactions executed by the client in the last 30 days
      responses:
        "200":
          $ref: '#/components/responses/Transactions'
        "400":
          $ref: '#/components/responses/Error'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          $ref: '#/components/responses/Error'
        default:
          description: Unexpected error
  
  # ================================================================================================
  #
  # /transactions/{milTransactionId}
  #
  # ================================================================================================
  /transactions/{milTransactionId}:
    parameters:
      - $ref: '#/components/parameters/RequestId'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/AcquirerId'
      - $ref: '#/components/parameters/Channel'
      - $ref: '#/components/parameters/MerchantId'
      - $ref: '#/components/parameters/TerminalId'
      - name: milTransactionId
        description: ID of the transaction for MIL
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MilTransactionId'
    get:
      operationId: getTransaction
      summary: Returns details on an IDPay transaction
      responses:
        "200":
          $ref: '#/components/responses/Transaction'
        "400":
          $ref: '#/components/responses/Error'
        "401":
          description: Wrong credentials
        "403":
          description: Forbidden
        "404":
          description: Transaction not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          $ref: '#/components/responses/Error'
        default:
          description: Unexpected error

    delete:
      operationId: cancelTransaction
      summary: Cancels an IDPay transaction
      responses:
        "204":
          description: Transaction cancelled successfully
        "400":
          $ref: '#/components/responses/Error'
        "401":
          description: Wrong credentials
        "403":
          description: Forbidden
        "404":
          description: Transaction not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          $ref: '#/components/responses/Error'
        default:
          description: Unexpected error

  # ================================================================================================
  #
  # /transactions/{milTransactionId}/verifyCie
  #
  # ================================================================================================
  /transactions/{milTransactionId}/verifyCie:
    post:
      operationId: verifyCie
      summary: Verifies the CIE
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/AcquirerId'
        - $ref: '#/components/parameters/Channel'
        - $ref: '#/components/parameters/MerchantId'
        - $ref: '#/components/parameters/TerminalId'
        - name: milTransactionId
          description: ID of the transaction for MIL
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/MilTransactionId'
      requestBody:
        $ref: '#/components/requestBodies/VerifyCie'
      responses:
        "200":
          $ref: '#/components/responses/VerifyCie'
        "400":
          $ref: '#/components/responses/Error'
        "401":
          description: Wrong credentials
        "403":
          description: Forbidden
        "404":
          description: Transaction doesn't exist
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          $ref: '#/components/responses/Error'
        default:
          description: Unexpected error

  # ================================================================================================
  #
  # /transactions/{milTransactionId}/authorize
  #
  # ================================================================================================
  /transactions/{milTransactionId}/authorize:
    post:
      operationId: authorize
      summary: Authorizes IDPay transaction by means of CIE
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/AcquirerId'
        - $ref: '#/components/parameters/Channel'
        - $ref: '#/components/parameters/MerchantId'
        - $ref: '#/components/parameters/TerminalId'
        - name: milTransactionId
          description: ID of the transaction for MIL
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/MilTransactionId'
      requestBody:
        $ref: '#/components/requestBodies/Authorize'
      responses:
        "200":
          description: Ok
        "400":
          $ref: '#/components/responses/Error'
        "401":
          description: Wrong credentials
        "403":
          description: Forbidden
        "404":
          description: Transaction doesn't exist
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          $ref: '#/components/responses/Error'
        default:
          description: Unexpected error

components:
  # ================================================================================================
  #
  # schema
  #
  # ================================================================================================
  schemas:
    # ----------------------------------------------------------------------------------------------
    #
    # Basic types
    #
    # ----------------------------------------------------------------------------------------------
    AcquirerId:
      description: Acquirer ID assigned by PagoPA
      type: string
      pattern: "^\\d{1,11}$"
      example: "4585625"

    AuthCodeBlock:
      description: Authorization Code Block
      type: string
      format: byte  # Base64 URL safe
      minLength: 16 # bytes
      maxLength: 16 # bytes
      example: "MDAwMTAyMDMwNDA1MDYwNzA4MDkwQTBCMEMwRDBFMEY="
    
    Challenge:
      description: Challenge to authenticate the CIE
      type: string
      format: byte  # Base64 URL safe
      minLength: 8 # bytes
      maxLength: 8 # bytes
      example: "MTIzNDU2Nzg="
      
    Channel:
      description: Channel originating the request
      enum:
        - ATM
        - POS
        - TOTEM
        - CASH_REGISTER
        - CSA
      type: string
      example: "POS"
    
    CiePublicKey:
      description: Public key read from the CIE
      type: string
      format: byte     # Base64 URL safe
      maxLength: 32767 # bytes
      
    CoveredAmount:
      description: Amount covered by the initiative in euro cents
      type: integer
      format: int64
      minimum: 0
      maximum: 99999999999
      example: 10012
    
    EncryptedSessionKey:
      description: Encrypted session key
      type: string
      format: byte    # Base64 URL safe
      minLength:  256 # bytes  
      maxLength: 2048 # bytes
      example: "et2j4kthRmeuc5uzCLi9dE9LeQKCsqbTNxNDwrJ-mBFA4UZQaXS1hdRw6ygXoH6Ra1uciDMDHpbg7DJoYfis_foMzk3gIQxrGkmcbsPkC2ieklIpOf021smzd_pSFJ580XQzwOJCli762aRByuNQAVFismcRhkSCad8fcRe7TgevephXcrbrjr25eCRgvmACESfrydnopO5g6yIkINpzuK9wP4ljDZTO90hP-_uRrfrgjwdxa6vv-qilYqvC4RPL7HR7eEbxkHFvsri7F7J9QDp5GsAJK1Bh4EdaLyl6MwYW1sEFnpQ-27_xtvFbwFANdB70cxsosvNsRueMjh9s-2rhgPZIT_YyHn3s394OOOKql5Umamn6pvcejPgXnXY0nRmSHCDoSUzNzEnQb1sxhuDpvQLQpWsKD3DESIjaDBq7sSvpBsoOg1ybnMccWiaIIRXCpYJU8aPhrkVTR-AczxwfwKtcCipLk3CiEjv6iu6PxfO62BGGRSUpe_m_HfU02DmT4qa6wUHbg0Sy3NBwBNvBVOVVIfwzmxZcQ6D5MhJaPSlfzcp4iTLk2a3eQU0bvJ3WsTdKhwuK6VgB2IV99i4ZX_bnxBaqKOzc1I3StTPGVAVCMjsTXGy0OyHDOtJv5A4N18r8rHyIVfzOuBEDa05_cp3ceHtrE8Dl5KzjFbY"
    
    Error:
      description: Error code
      type: string
      pattern: "^[A-F0-9]{9}$"
      example: "001000005"
    
    Exp:
      description: Expiration timestamp (epoch millis) of master key
      type: integer
      minimum: 0
      example: 1678975089
    
    GoodsCost:
      description: Cost of goods or service to buy in euro cents
      type: integer
      format: int64
      minimum: 0
      maximum: 99999999999
      example: 50054
    
    Iat:
      description: Issued at timestamp (epoch millis) of master key
      type: integer
      minimum: 0
      example: 1678888689
    
    IdPayTransactionId:
      description: ID of the transaction for IDPay
      type: string
      pattern: "^[\u0001-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]{1,256}$"
      example: "613691ec-15d5-456e-a41c-e469fa4dd060_QRCODE_1694181289491"
    
    InitiativeId:
      description: ID of the initiative.
      type: string
      pattern: "^[\u0001-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]{1,256}$"
      example: "649c50b5a03f655e6543af06"

    InitiativeName:
      description: Name of the initiative.
      type: string
      pattern: "^[\u0001-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]{1,256}$"
      example: "Test funzionali Sconto tipo 6"
    
    KeyOp:
      description: Operation that can be executed
      enum:
        - wrapKey
      type: string
      example: "wrapKey"
    
    KeyType:
      description: Master key type
      enum:
        - RSA
      type: string
      example: "RSA"
    
    Kid:
      description: Master key ID
      type: string
      format: uuid
      pattern: "^[ -~]{1,2048}$"
      example: "d0d654e697da4848b56899fedccb642b/4536def850ac6e9830f"
      
    MaxRetries:
      description: Max number of retries to check the status of the transaction
      type: integer
      minimum: 1
      maximum: 10
      example: 3
      
    MerchantId:
      description: Merchant ID. Mandatory when Channel equals POS.
      type: string
      pattern: "^[0-9a-zA-Z]{1,15}$"
      example: "28405fHfk73x88D"

    MilTransactionId:
      description: ID of the transaction for MIL
      type: string
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      example: "ccadc1c4-3913-431e-a569-6cf2ce60946c"
    
    Modulus:
      description: Modulus of master key
      type: string
      format: byte    # Base64 URL safe
      minLength:  256 # bytes  
      maxLength: 2048 # bytes
    
    Nis:
      description: Numero identificativo servizi read from the CIE
      type: string
      pattern: "^[0-9]{12}$"
      example: "123456789012"
      
    Organization:
      description: Name of the governmental organization that makes the initiative
      type: string
      pattern: "^[\u0001-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]{1,256}$"
      example: "Ente di test IDPay"
    
    PublicExponent:
      description: Public key exponent
      type: string
      format: byte    # Base64 URL safe
      minLength:    1 # bytes
      maxLength: 2048 # bytes
      example: "AQAB"
      
    PublicKeyUse:
      description: Public key use
      enum:
        - enc
      type: string
      example: "enc"
    
    QrCode:
      description: String to be encoded in the QR-code
      type: string
      pattern: "^[\u0001-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]{1,256}$"
      example: "https://continua.io.pagopa.it/idpay/auth/rwkmek1x"

    RequestId:
      description: ID of the request
      type: string
      format: uuid
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      example: "d0d654e6-97da-4848-b568-99fedccb642b"

    RetryAfter:
      description: Number of seconds after which to check the status of the transaction
      type: integer
      minimum: 1
      maximum: 60
      example: 5
    
    SecondFactor:
      description: Second factor to build authorization code block
      type: string
      pattern: "^[a-fA-F0-9]{16}$"
      example: "abc534659def0000"
      #format: byte # Base64 URL safe
      #minLength: 6 # bytes -> 8 chars when encoded with Base64
      #maxLength: 6 # bytes -> 8 chars when encoded with Base64
      #example: "SD76s1nB"
    
    Signature:
      description: Signature of the challenge calculated by the CIE
      type: string
      format: byte     # Base64 URL safe
      maxLength: 32767 # bytes

    Sod:
      description: Document Security Object read from the CIE
      type: string
      format: byte     # Base64 URL safe
      maxLength: 32767 # bytes

    TerminalId:
      description: ID of the terminal originating the transaction. It must be unique per acquirer and channel.
      type: string
      pattern: "^[0-9a-zA-Z]{1,8}$"
      example: "0aB9wXyZ"

    TransactionCode:
      description: Fallback code to use when IO cannot read the QR-code
      type: string
      pattern: "^[0-9a-zA-Z]{8}$"
      example: "12345678"
    
    TransactionLocation:
      description: URL of the transaction
      type: string
      format: uri
      pattern: "^[ -~]{1,2048}$"
      example: "https://mil-d-apim.azure-api.net/mil-idpay/transactions/c7a1b24b-0583-4772-92eb-dbaa92fd8f16"
    
    TransactionStatus:
      description: Status of the transaction
      type: string
      enum:
        - CREATED       # CREATED -> IDENTIFIED -> CREATED : Transaction has not been authorized by the User
        - IDENTIFIED    # QR-code has been read by App IO or IPZS has verified CIE successfully
        - AUTHORIZED    # CREATED -> IDENTIFIED -> AUTHORIZED : Transaction has been authorized by the User
        - REJECTED
        - REWARDED
        - CANCELLED     # Transaction has been deleted
    
    TransactionTimestamp:
      description: Timestamp of the transaction
      type: string
      format: date-time
      maxLength: 19
      example: "2023-09-11T12:45:33"
    
    Version:
      description: Version of the required API
      type: string
      pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
      maxLength: 64
      example: "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay"
    
    # ----------------------------------------------------------------------------------------------
    #
    # Complex types
    #
    # ----------------------------------------------------------------------------------------------
    AuthCodeBlockData:
      description: Details on IDPay Authorization Code Block
      type: object
      additionalProperties: false
      properties:
        kid:
          $ref: '#/components/schemas/Kid'
        encSessionKey:
          $ref: '#/components/schemas/EncryptedSessionKey'
        authCodeBlock:
          $ref: '#/components/schemas/AuthCodeBlock'
      required:
        - kid
        - encSessionKey
        - authCodeBlock
    
    Authorize:
      description: Details to authorize an IDPay transaction by means of a CIE
      type: object
      additionalProperties: false
      properties:
        authCodeBlockData:
          $ref: '#/components/schemas/AuthCodeBlockData'
      required:
        - authCodeBlockData
          
    CreateTransactionReq:
      description: Details to create a new IDPay transaction
      type: object
      additionalProperties: false
      properties:
        initiativeId:
          $ref: '#/components/schemas/InitiativeId'
        timestamp:
          $ref: '#/components/schemas/TransactionTimestamp'
        goodsCost:
          $ref: '#/components/schemas/GoodsCost'
      required:
        - initiativeId
        - timestamp
        - goodsCost

    CreateTransactionResp:
      description: Details returned when a new IDPay transaction has been created
      type: object
      additionalProperties: false
      properties:
        idpayTransactionId:
          $ref: '#/components/schemas/IdPayTransactionId'
        milTransactionId:
          $ref: '#/components/schemas/MilTransactionId'
        initiativeId:
          $ref: '#/components/schemas/InitiativeId'
        timestamp:
          $ref: '#/components/schemas/TransactionTimestamp'
        goodsCost:
          $ref: '#/components/schemas/GoodsCost'
        challenge:
          $ref: '#/components/schemas/Challenge'
        trxCode:
          $ref: '#/components/schemas/TransactionCode'
        qrCode:
          $ref: '#/components/schemas/QrCode'
        status:
          $ref: '#/components/schemas/TransactionStatus'
      required:
        - idpayTransactionId
        - milTransactionId
        - initiativeId
        - timestamp
        - goodsCost
        - challenge
        - trxCode
        - qrCode
        - status
      example:
        idpayTransactionId: "613691ec-15d5-456e-a41c-e469fa4dd060_QRCODE_1694181289491"
        milTransactionId: "ccadc1c4-3913-431e-a569-6cf2ce60946c"
        initiativeId: "649c50b5a03f655e6543af06"
        timestamp: "2023-09-11T12:45:33"
        goodsCost: 50054
        challenge: "NzI3NzZCNkQ2NTZCMzE3OA=="
        trxCode: "rwkmek1x"
        qrCode: "https://continua.io.pagopa.it/idpay/auth/rwkmek1x"
        status: "CREATED"
      
    Errors:
      description: List of errors
      type: object
      additionalProperties: false
      properties:
        errors:
          type: array
          maxItems: 32
          items:
            $ref: '#/components/schemas/Error'
      required:
        - errors
      example:
        errors:
          - "00000000A"
          - "001000001"
    
    KeyOps:
      description: Operations that can be executed
      type: object
      additionalProperties: false
      properties:
        keyOps:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/KeyOp'
      required:
        - keyOps
      example:
        keyOps:
          - "wrapKey"
    
    Initiative:
      description: Initiative details
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/InitiativeId'
        name:
          $ref: '#/components/schemas/InitiativeName'
        organization:
          $ref: '#/components/schemas/Organization'
      required:
        - id
        - name
        - organization
    
    Initiatives:
      description: List of initiatives
      type: object
      additionalProperties: false
      properties:
        initiatives:
          type: array
          maxItems: 32
          items:
            $ref: '#/components/schemas/Initiative'
      required:
        - initiatives

    PublicKey:
      description: Public master key to be used to encrypt session key
      type: object
      additionalProperties: false
      properties:
        kty:
          $ref: '#/components/schemas/KeyType'
        e:
          $ref: '#/components/schemas/PublicExponent'
        use:
          $ref: '#/components/schemas/PublicKeyUse'
        kid:
          $ref: '#/components/schemas/Kid'
        exp:
          $ref: '#/components/schemas/Exp'
        iat:
          $ref: '#/components/schemas/Iat'
        n:
          $ref: '#/components/schemas/Modulus'
        keyOps:
          $ref: '#/components/schemas/KeyOps'
      required:
        - kty
        - e
        - use
        - kid
        - exp
        - iat
        - n
        - keyOps
      example:
        kty: "RSA"
        e: "AQAB"
        use: "enc"
        kid: "0ffa8f8d-d92b-46ee-a4e7-8f26651a2a96"
        exp: 1678975089
        iat: 1678888689
        n: "qjcVEWJTTySeKxHsJSsmVGk2cEvXJ4tBC4uyU5MxYwBAiIWuZb_yDOIjLz7JN8QsJs3QrZtS3vqv18ljW2db6ED90OUo9CVJveSF4eNRozDHOvnHGT0HR-8Wf5GxcNy63zfQLrnfdp5F9TrhMFRMkEA0TCT7PhT3yF6YvwLtQyMciER1_KKnpGomfAkW-UpaF2nHfXiFPrOIHMuNb5BoRR1f0349tqloLgLd7vyMy1jg-BldmEgRV1bcFqjH0Cg3leROjDy9HzdFauRIlSb4VZrqNni2hgaTUHI5Xp7aCwpS9Y_mf19KpxN0_8d-f3UVRlwtI1dryelpdC5jowxia2Pf8UgSZyMs2ZxDf6eU0SH8wHEvMpeFpwmiBD1XcsISoTan0Yv7w_CLo6JOqX6EfogDQZUBzKKlVCZSoSinAz0_7Bj2orgWKQ9sbfgJWgJweKkJLH-bNSRaVcu02boxPnlJeay3wROhSAgtiKWZnsU1_FpPNG0JBFCh_x-VjkuBoREpNEyJM5NvhRCmyObtzocS4eCtAgvmo3EFv_Xa-rp0p5ez4A-_QUb5OsYOswqYbIV1GbtiAfCTOrNbv6K86LaTllZ9WqYrKgDv7KA-604K37k33LHROqcO9Q-bCN8hKzQDWs7M3DFNP6P5iBUUVs-gtWncHvIuUWTth-fBXa8"
        keyOps:
          - "wrapKey"
    
    Transaction:
      description: IDPay transaction details
      type: object
      additionalProperties: false
      properties:
        idpayTransactionId:
          $ref: '#/components/schemas/IdPayTransactionId'
        milTransactionId:
          $ref: '#/components/schemas/MilTransactionId'
        initiativeId:
          $ref: '#/components/schemas/InitiativeId'
        timestamp:
          $ref: '#/components/schemas/TransactionTimestamp'
        goodsCost:
          $ref: '#/components/schemas/GoodsCost'
        trxCode:
          $ref: '#/components/schemas/TransactionCode'
        coveredAmount:
          $ref: '#/components/schemas/CoveredAmount'
        secondFactor:
          $ref: '#/components/schemas/SecondFactor'
        status:
          $ref: '#/components/schemas/TransactionStatus'
      required:
        - idpayTransactionId
        - milTransactionId
        - initiativeId
        - timestamp
        - goodsCost
        - trxCode
        - status
      example:
        idpayTransactionId: "613691ec-15d5-456e-a41c-e469fa4dd060_QRCODE_1694181289491"
        milTransactionId: "ccadc1c4-3913-431e-a569-6cf2ce60946c"
        initiativeId: "649c50b5a03f655e6543af06"
        timestamp: "2023-09-11T12:45:33"
        goodsCost: 50054
        trxCode: "rwkmek1x"
        coveredAmount: 10012
        secondFactor: ""
        status: "IDENTIFIED"
    
    Transactions:
      description: Details of transactions
      type: object
      additionalProperties: false
      properties:
        transactions:
          type: array
          maxItems: 30
          items:
            $ref: '#/components/schemas/Transaction'
    
    VerifyCie:
      description: Details to verify CIE
      type: object
      additionalProperties: false
      properties:
        nis:
          $ref: '#/components/schemas/Nis'
        ciePublicKey:
          $ref: '#/components/schemas/CiePublicKey'
        signature:
          $ref: '#/components/schemas/Signature'
        sod:
          $ref: '#/components/schemas/Sod'
      required:
        - nis
        - ciePublicKey
        - signature
        - sod
    
  # ================================================================================================
  #
  # requestBodies
  #
  # ================================================================================================
  requestBodies:
    Authorize:
      description: Request to authorize IDPay transaction by means of CIE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authorize'
    
    CreateTransaction:
      description: Request to create a new IDPay transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTransactionReq'

    VerifyCie:
      description: Request to verify CIE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyCie'

  # ================================================================================================
  #
  # parameters
  #
  # ================================================================================================
  parameters:
    AcquirerId:
      name: AcquirerId
      in: header
      description: Acquirer ID assigned by PagoPA
      required: true
      schema:
        $ref: '#/components/schemas/AcquirerId'

    Channel:
      name: Channel
      in: header
      description: Channel originating the request
      required: true
      schema:
        $ref: '#/components/schemas/Channel'

    MerchantId:
      name: MerchantId
      description: Merchant ID (if Channel = POS, this parameter is mandatory)
      in: header
      required: false
      schema:
        $ref: '#/components/schemas/MerchantId'
    
    RequestId:
      name: RequestId
      in: header
      description: ID of the request
      required: true
      schema:
        $ref: '#/components/schemas/RequestId'

    TerminalId:
      name: TerminalId
      in: header
      description: ID of the terminal originating the transaction. It must be unique per acquirer and channel.
      required: true
      schema:
        $ref: '#/components/schemas/TerminalId'

    Version:
      name: Version
      in: header
      description: Version of the required API
      required: false
      schema:
        $ref: '#/components/schemas/Version'

  # ================================================================================================
  #
  # responses
  #
  # ================================================================================================
  responses:
    CreateTransaction:
      description: Transaction details
      headers:
        Location:
          description: URL to get the status of the transaction
          required: true
          schema:
            $ref: '#/components/schemas/TransactionLocation'
        Retry-After:
          description: Number of seconds after which to check the status of the transaction
          required: true
          schema:
            $ref: '#/components/schemas/RetryAfter'
        Max-Retries:
          description: Max number of retries to check the status of the transaction
          required: true
          schema:
            $ref: '#/components/schemas/MaxRetries'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTransactionResp'
    
    Error:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    
    Initiatives:
      description: List of initiatives that can be used with the Merchant
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Initiatives'
    
    Transaction:
      description: Transaction details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transaction'

    Transactions:
      description: Details of transactions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transactions'
    
    VerifyCie:
      description: Public key to generate AuthCodeBlock
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublicKey'

  # ================================================================================================
  #
  # securitySchemes
  #
  # ================================================================================================
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT